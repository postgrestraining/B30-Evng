---
## 
## Creates Aurora PostgreSQL Cluster
## + May be used for creating the cluster and DB parameter groups
## + Groups not applied to the cluster/instances
## Changelog:
##
## Dependencies:
## none
##
## This sample code is made available under the MIT-0 license. See the LICENSE file.

AWSTemplateFormatVersion: 2010-09-09
Description: Amazon RDS PostgreSQL Database Cluster Creation
## Parameters
Parameters:
  TemplateName:
    Type: String
    Default: rdsa-postgresql
    Description: Name used for different elements created.

  # This is the VPC Id for the RDS VPC created earlier
  RdsAuroraVPC:
    Type: AWS::EC2::VPC::Id
    Description: Main VPC id

  # Does NOT list all allowed values - please check documentation
  # Version dependencies, db.r3 not available for PG
  # db.r6g.large available only for "12.4 and higher, 11.9 and higher"
  DBInstanceClass:
    Description: 'The instance type of database server.'
    Type: String
    Default: 'db.t3.medium'
    AllowedValues: ['db.t3.medium','db.r3.large','db.r5.large','db.r6g.large']

  # Master user name created for the cluster
  DBMasterUsername:
    Description: 'The master user name for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: String
    Default: postgres

  VPCSecurityGroupCluster:
    Description: 'Security group for the DB cluster instances'
    Type: AWS::EC2::SecurityGroup::Id

  DBMasterUserPassword:
    Description: 'This is the password for the master user'
    Type: String
    Default: postgres


  # Version of the Database engine
  DBEngineVersion:
    Description: Select Database Engine Version
    Type: String
    Default: 15.3
    AllowedValues:
      - 11.6
      - 11.7
      - 11.8
      - 11.9
      - 12.7
      - 13.4
      - 13.6
      - 15.3


# Used as globals
Mappings:
  ClusterSettings:
    global:
      dbSchema: labdb
      dbDriver: pgsql


# Resources for the cluster
Resources:
  # DB Cluster Subnet Group
  #ClusterDBSubnetGroup:
  #    Type: AWS::RDS::DBSubnetGroup
  #    Description: Subnet group
  #    Properties:
  #      DBSubnetGroupDescription: !Sub ${TemplateName}-db-subnet-group
  #      DBSubnetGroupName: !Sub ${TemplateName}-db-subnet-group
  #      SubnetIds: !Split [',', !Ref PublicSubnets] 
  #      Tags:
  #        - Key: Name
  #          Value: !Sub ${TemplateName}-db-subnet-group

  # Create Aurora cluster
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html
  DBCluster:
    Type: AWS::RDS::DBCluster
    #DependsOn: [ClusterDBSubnetGroup]
    Properties:
      DBClusterIdentifier: !Sub ${TemplateName}-cluster
      Engine: aurora-postgresql
      EngineVersion : !Ref DBEngineVersion
      Port: 5432
      DBSubnetGroupName: my-db-subnet-group
      BackupRetentionPeriod: 7
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterUserPassword
      DatabaseName: !FindInMap [ ClusterSettings, global, dbSchema ]
      StorageEncrypted: true
      VpcSecurityGroupIds: [ !Ref VPCSecurityGroupCluster ]
      Tags:
        - Key: Name
          Value: !Sub ${TemplateName}-cluster


  # Deploy the first cluster node (always the writer)
  DBPrimaryNode:
    Type: AWS::RDS::DBInstance
    DependsOn: DBCluster
    Properties:
      DBInstanceIdentifier: !Sub ${TemplateName}-node-01
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceClass: !Ref DBInstanceClass
      Engine: aurora-postgresql
      EngineVersion : !Ref DBEngineVersion
      PubliclyAccessible: true
      Tags:
        - Key: Name
          Value: !Sub ${TemplateName}-node-01


# Outputs
Outputs:
  DBClusterId:
    Description: Cluster resource ARN
    Value: !Ref DBCluster
  clusterEndpoint:
      Description: Aurora Cluster Endpoint
      Value: !GetAtt DBCluster.Endpoint.Address
  readerEndpoint:
    Description: Aurora Reader Endpoint
    Value: !GetAtt DBCluster.ReadEndpoint.Address
  Port:
    Description: Aurora Endpoint Port
    Value: !GetAtt DBCluster.Endpoint.Port
  DatabaseName:
    Description: Database Name
    Value: !FindInMap [ ClusterSettings, global, dbSchema ]
  DBUsername:
    Description: Database master username
    Value: !Ref DBMasterUsername
  #ClusterDBSubnetGroup:
  #  Description: Subnet Group created for the DB cluster
  #  Value: !Ref ClusterDBSubnetGroup

